name: unittest
'on':
  push: null
  pull_request: null
  workflow_dispatch: null
jobs:
  unittest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: prepare env
        run: >
          echo "TRAVIS_BUILD_DIR=$PWD" >> $GITHUB_ENV

          echo "CMAKE_PREFIX_PATH=$TRAVIS_BUILD_DIR/tests/install" >>
          $GITHUB_ENV

          echo "GTEST_ROOT=$CMAKE_PREFIX_PATH/googletest" >> $GITHUB_ENV
      - name: Checkout submodules
        uses: textbook/git-checkout-submodule-action@master
      - name: Install tools
        run: |
          echo "::group::googletest"
          export CMAKE_PREFIX_PATH=$TRAVIS_BUILD_DIR/tests/install
          cd $GITHUB_WORKSPACE/tests/ci
          export GTEST_ROOT=$CMAKE_PREFIX_PATH/googletest
          ./install_googletest.sh
          echo "::endgroup::"
          echo "::group::rapidassist"
          cd $GITHUB_WORKSPACE/tests/ci
          ./install_rapidassist.sh
          echo "::endgroup::"
          echo "::group::win32arduino"
          cd $GITHUB_WORKSPACE/tests/ci
          ./build_win32arduino.sh
          echo "::endgroup::"
          echo "::group::build signalDecoderTest"
          cd $GITHUB_WORKSPACE/tests/ci
          ./build_signalDecoderTests.sh
          cd $GITHUB_WORKSPACE/
          ls -l
          echo "::endgroup::"
      - name: run test
        run: |
          cd $GITHUB_WORKSPACE/tests/build
          ls -l
          ./bin/TestProject 
  deploy:
    strategy:
      matrix:
        BOARD:
          - nano328
        RECEIVER:
          - cc1101
        include:
          - BOARD: nano328
            RECEIVER: cc1101
            arduino-platform: 'arduino:avr'
            fqbn: 'arduino:avr:nano:cpu=atmega328'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Checkout submodules
        uses: textbook/git-checkout-submodule-action@master
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v1.1.1
      - name: Install platform
        run: arduino-cli core update-index
      - name: Add core(s)
        run: 'arduino-cli core install ${{ matrix.arduino-platform }}'
      - name: run lists
        run: |
          ls -l $PWD/src/arduino-ide/SIGNALDuino/ArduinoJson/
      - name: Compile Sketch
        run: >-
          arduino-cli compile --fqbn ${{ matrix.fqbn }}
          $PWD/src/arduino-ide/SIGNALDuino/SIGNALDuino.ino
