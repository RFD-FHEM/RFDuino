;PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
; https://docs.platformio.org/en/latest/projectconf/section_env.html
; default_envs = maple_mini_bootl_v1_CC1101@debug_wr, maple_mini_bootl_v1_CC1101@debug, maple_mini_bootl_v1_CC1101, maple_mini_bootl_v1
; default_envs = maple_mini_bootl_v2_CC1101@debug_wr, maple_mini_bootl_v2_CC1101@debug, maple_mini_bootl_v2_CC1101, maple_mini_bootl_v2
; default_envs = nano328_bootl_new, nano328_bootl_new@debug, nano328_bootl_old, nano328_bootl_old@debug
; default_envs = minicul_16MHz_CC1101, minicul_16MHz_CC1101@debug, minicul_8MHz_CC1101, minicul_8MHz_CC1101@debug
; default_envs = promini, promini@debug
; default_envs = esp32_CC1101@debug, esp32_CC1101, esp32@debug, esp32
; default_envs = esp8266_CC1101@debug, esp8266_CC1101, esp8266@debug, esp8266
test_dir = tests/

[env]
; https://docs.platformio.org/en/feature-platformio-30/projectconf.html
src_filter = +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<arduino-ide/SIGNALDuino/> -<_micro-api/libraries/ArduinoJson/test/> -<_micro-api/libraries/ArduinoJson/third-party/> -<_micro-api/libraries/fastdelegate/examples/>-<test/> -<tests/> -<_micro-api/libraries/ArduinoJson/fuzzing/>
lib_extra_dirs = 
    src/_micro-api/libraries/

; general - for all devices, using ${env.***}

; Unix, example
debug_port = /dev/ttyUSB0
monitor_port = /dev/ttyUSB0
upload_port = /dev/ttyUSB0

; Windows, example
; debug_port = COM4
; monitor_port = COM4
; upload_port = COM4

[env_maple_mini]
; all options for MAPLE_Mini
; extra_scripts = pre:custom_hwids.py                           ; to write USB PID for device | needed to right reconnected
; platform = ststm32                                            ; Stable version
platform = https://github.com/platformio/platform-ststm32.git   ; Development version
board = maple_mini_origin
board_build.mcu = stm32f103cbt6                                 ; https://docs.platformio.org/en/latest/projectconf/section_env_platform.html#board-build-mcu
board_build.core = STM32Duino                                   ; https://docs.platformio.org/en/latest/platforms/ststm32.html#configuration
framework = arduino
build_flags=
 -D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC  ; CDC (generic Serial supersede U(S)ART)
 -D USBCON                            ; !! work only with maple_mini bootloader v1.0 !!
 ;-D USBD_VID=0x1eaf                  ; Maple Serial (COMxx)
 ;-D USBD_PID=0x0003                  ; Bootloader
 -D USBD_PID=0x0004                   ; Device
 -D USBD_VID=0x0483                   ; Serielles USB-Geraet (COMxx)
 -D USB_MANUFACTURER="STMicroelectronics"
 -D USB_PRODUCT="\"Maple\""


; * * * * * * * * * * * * * * * * * * * * *
; behind this lines, all hardware projects
; * * * * * * * * * * * * * * * * * * * * *

[env:maple_mini_bootl_v2_CC1101@debug_wr]
; STM32duino bootloader v2.0
; no hardware to test
platform = ${env_maple_mini.platform}
board = maple_mini_b20
board_build.mcu = ${env_maple_mini.board_build.mcu}
board_build.core = ${env_maple_mini.board_build.core}
framework = ${env_maple_mini.framework}
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags= -D ARDUINO_MAPLEMINI_F103CB=1
 -D OTHER_BOARD_WITH_CC1101=1
 -D WATCHDOG_STM32=1
 -D DEBUG

[env:maple_mini_bootl_v1_CC1101@debug_wr]
; STM32duino bootloader v1.0
platform = ${env_maple_mini.platform}
board = ${env_maple_mini.board}
board_build.mcu = ${env_maple_mini.board_build.mcu}
board_build.core = ${env_maple_mini.board_build.core}
framework = ${env_maple_mini.framework}
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags = ${env_maple_mini.build_flags}
 -D OTHER_BOARD_WITH_CC1101=1
 -D WATCHDOG_STM32=1
 -D DEBUG

[env:maple_mini_bootl_v2_CC1101@debug]
; STM32duino bootloader v2.0
; no hardware to test
platform = ${env_maple_mini.platform}
board = maple_mini_b20
board_build.mcu = ${env_maple_mini.board_build.mcu}
board_build.core = ${env_maple_mini.board_build.core}
framework = ${env_maple_mini.framework}
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags= -D ARDUINO_MAPLEMINI_F103CB=1
 -D OTHER_BOARD_WITH_CC1101=1
 -D DEBUG

[env:maple_mini_bootl_v1_CC1101@debug]
; STM32duino bootloader v1.0
platform = ${env_maple_mini.platform}
board = ${env_maple_mini.board}
board_build.mcu = ${env_maple_mini.board_build.mcu}
board_build.core = ${env_maple_mini.board_build.core}
framework = ${env_maple_mini.framework}
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags = ${env_maple_mini.build_flags}
 -D OTHER_BOARD_WITH_CC1101=1
 -D DEBUG

[env:maple_mini_bootl_v2_CC1101]
; STM32duino bootloader v2.0
; no hardware to test
platform = ${env_maple_mini.platform}
board = maple_mini_b20
board_build.mcu = ${env_maple_mini.board_build.mcu}
board_build.core = ${env_maple_mini.board_build.core}
framework = ${env_maple_mini.framework}
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags= -D ARDUINO_MAPLEMINI_F103CB=1
 -D OTHER_BOARD_WITH_CC1101=1

[env:maple_mini_bootl_v1_CC1101]
; STM32duino bootloader v1.0
platform = ${env_maple_mini.platform}
board = ${env_maple_mini.board}
board_build.mcu = ${env_maple_mini.board_build.mcu}
board_build.core = ${env_maple_mini.board_build.core}
framework = ${env_maple_mini.framework}
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags = ${env_maple_mini.build_flags}
 -D OTHER_BOARD_WITH_CC1101=1

[env:maple_mini_bootl_v2]
; STM32duino bootloader v2.0
; no hardware to test
platform = ${env_maple_mini.platform}
board = maple_mini_b20
board_build.mcu = ${env_maple_mini.board_build.mcu}
board_build.core = ${env_maple_mini.board_build.core}
framework = ${env_maple_mini.framework}
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=
 -D ARDUINO_MAPLEMINI_F103CB=1

[env:maple_mini_bootl_v1]
; STM32duino bootloader v1.0
platform = ${env_maple_mini.platform}
board = ${env_maple_mini.board}
board_build.mcu = ${env_maple_mini.board_build.mcu}
board_build.core = ${env_maple_mini.board_build.core}
framework = ${env_maple_mini.framework}
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags = ${env_maple_mini.build_flags}

[env:nano_bootl_old_CC1101@debug]
; bootloader ATmegaBOOT
platform = atmelavr
board = nanoatmega328
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D OTHER_BOARD_WITH_CC1101=1 -D DEBUG

[env:nano_bootl_old_CC1101]
; bootloader ATmegaBOOT
platform = atmelavr
board = nanoatmega328
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D OTHER_BOARD_WITH_CC1101=1

[env:nano_bootl_new_CC1101@debug]
; bootloader Optiboot
platform = atmelavr
board = nanoatmega328new
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D OTHER_BOARD_WITH_CC1101=1 -D DEBUG

[env:nano_bootl_new_CC1101]
; bootloader Optiboot
platform = atmelavr
board = nanoatmega328new
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D OTHER_BOARD_WITH_CC1101=1

[env:nano328_bootl_old@debug]
; bootloader ATmegaBOOT
platform = atmelavr
board = nanoatmega328
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D DEBUG
src_filter =-cc1101.h -cc1101.cpp +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<arduino-ide/SIGNALDuino/> -<_micro-api/libraries/ArduinoJson/test/> -<_micro-api/libraries/ArduinoJson/third-party/> -<_micro-api/libraries/fastdelegate/examples/>-<test/> -<tests/> -<_micro-api/libraries/ArduinoJson/fuzzing/>

[env:nano328_bootl_old]
; bootloader ATmegaBOOT
platform = atmelavr
board = nanoatmega328
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=

[env:nano328_bootl_new@debug]
; bootloader Optiboot
platform = atmelavr
board = nanoatmega328new
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D DEBUG
src_filter =-cc1101.h -cc1101.cpp +<*> -<.git/> -<.svn/> -<example/> -<examples/> -<arduino-ide/SIGNALDuino/> -<_micro-api/libraries/ArduinoJson/test/> -<_micro-api/libraries/ArduinoJson/third-party/> -<_micro-api/libraries/fastdelegate/examples/>-<test/> -<tests/> -<_micro-api/libraries/ArduinoJson/fuzzing/>

[env:nano328_bootl_new]
; bootloader Optiboot
platform = atmelavr
board = nanoatmega328new
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=

[env:minicul_8MHz_CC1101@debug]
platform = atmelavr
board = pro8MHzatmega328
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D OTHER_BOARD_WITH_CC1101=1 -D DEBUG

[env:minicul_8MHz_CC1101]
platform = atmelavr
board = pro8MHzatmega328
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D OTHER_BOARD_WITH_CC1101=1 

[env:minicul_16MHz_CC1101@debug]
platform = atmelavr
board = pro16MHzatmega328
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D OTHER_BOARD_WITH_CC1101=1 -D DEBUG

[env:minicul_16MHz_CC1101]
platform = atmelavr
board = pro16MHzatmega328
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D OTHER_BOARD_WITH_CC1101=1 

[env:promini@debug]
platform = atmelavr
board = pro8MHzatmega328
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D DEBUG

[env:promini]
platform = atmelavr
board = pro8MHzatmega328
monitor_speed = 57600
framework = arduino
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=

; Todo: Figure out how to import Radino board to pio
;[env:radino@debug]
;platform = atmelavr
;board = pro8MHzatmega328
;monitor_speed = 57600
;framework = arduino
;monitor_port = ${env.monitor_port}
;upload_port = ${env.upload_port}
;build_flags=-D ARDUINO_AVR_ICT_BOARDS_ICT_BOARDS_AVR_RADINOCC1101 -D DEBUG

;[env:radino]
;platform = atmelavr
;board = pro8MHzatmega328
;monitor_speed = 57600
;framework = arduino
;monitor_port = ${env.monitor_port}
;upload_port = ${env.upload_port}
;build_flags=-D ARDUINO_AVR_ICT_BOARDS_ICT_BOARDS_AVR_RADINOCC1101

[env:esp32_CC1101@debug]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D DEBUG -D OTHER_BOARD_WITH_CC1101=1

[env:esp32_CC1101]
platform = espressif32
board = esp32dev
framework = arduino
monitor_speed = 115200
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D OTHER_BOARD_WITH_CC1101=1

[env:esp32@debug]
platform = espressif32
board = esp32dev
framework = arduino
debug_tool = olimex-arm-usb-ocd-h
monitor_speed = 115200
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=-D DEBUG

[env:esp32]
platform = espressif32
board = esp32dev
framework = arduino
debug_tool = olimex-arm-usb-ocd-h
monitor_speed = 115200
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
build_flags=


;[env:esp8266cc1101@2.2.2]
;platform = espressif8266@2.2.2
;board = nodemcuv2
;framework = arduino
;lib_deps =
;upload_speed = 115200
;monitor_port = ${env.monitor_port}
;upload_port = ${env.upload_port}
;monitor_speed = 115200
;platform_packages =
;    framework-arduinoespressif8266 @ https://github.com/esp8266/Arduino.git
;build_flags=-D DEBUG -D OTHER_BOARD_WITH_CC1101

[env:esp8266_CC1101@debug]
platform = espressif8266
board = nodemcuv2
framework = arduino
;upload_speed = 115200
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
monitor_speed = 115200
lib_deps =
build_flags=-D DEBUG -D OTHER_BOARD_WITH_CC1101=1

[env:esp8266_CC1101]
platform = espressif8266
board = nodemcuv2
framework = arduino
;upload_speed = 115200
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
monitor_speed = 115200
lib_deps =
build_flags=-D OTHER_BOARD_WITH_CC1101=1

[env:esp8266@debug]
platform = espressif8266
board = nodemcuv2
framework = arduino
;upload_speed = 115200
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
monitor_speed = 115200
lib_deps =
build_flags=-D DEBUG

[env:esp8266]
platform = espressif8266
board = nodemcuv2
framework = arduino
;upload_speed = 115200
monitor_port = ${env.monitor_port}
upload_port = ${env.upload_port}
monitor_speed = 115200
lib_deps =
build_flags=


[env:native]
platform = native
lib_deps =
  googletest@1.8.1
build_flags =
  -std=c++11
lib_archive = false
test_ignore = embedded*
;src_dir = tests/testSignalDecoder
lib_compat_mode = off
